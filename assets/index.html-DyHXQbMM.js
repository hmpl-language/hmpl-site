import{r as p,c as u,h as c,a as h,b as v,d as n,e as b,f as g,v as f,g as q,i as k,o as m}from"./app-wwWP8wWN.js";import{_ as E}from"./plugin-vue_export-helper-DlAUqK2U.js";const A={__name:"index.html",setup(y,{expose:s}){s();let r=p(0);const e=p(""),a=[u("hmpl0"),c("div","Loading...")],l=(i,F)=>a[0],t=(i,F)=>a[1],o=p(l),d={get id(){return r},set id(i){r=i},login:e,els:a,Comment:l,Loading:t,currentComponent:o,switchComponent:()=>{o.value===l&&(o.value=t,setTimeout(()=>{o.value=c("span",`Hello, ${e.value}!`),e.value=""},300))},createCommentVNode:u,h:c,ref:p};return Object.defineProperty(d,"__isScriptSetup",{enumerable:!1,value:!0}),d}},D={id:"wrapper"},w={class:"form-example"};function x(y,s,r,e,a,l){return m(),h("div",null,[s[3]||(s[3]=v(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#D32F2F;">import</span><span style="color:#24292EFF;"> { compile } </span><span style="color:#D32F2F;">from</span><span style="color:#22863A;"> &quot;hmpl-js&quot;</span><span style="color:#24292EFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> templateFn</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> compile</span><span style="color:#24292EFF;">(</span></span>
<span class="line"><span style="color:#22863A;">  \`&lt;div&gt;</span></span>
<span class="line"><span style="color:#22863A;">  &lt;form onsubmit=&quot;function prevent(e){e.preventDefault();};return prevent(event);&quot; id=&quot;form&quot;&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;div class=&quot;form-example&quot;&gt;</span></span>
<span class="line"><span style="color:#22863A;">      &lt;label for=&quot;login&quot;&gt;Login: &lt;/label&gt;</span></span>
<span class="line"><span style="color:#22863A;">      &lt;input type=&quot;login&quot; name=&quot;login&quot; id=&quot;login&quot; required /&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;div class=&quot;form-example&quot;&gt;</span></span>
<span class="line"><span style="color:#22863A;">      &lt;input type=&quot;submit&quot; value=&quot;Register!&quot; /&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#22863A;">  &lt;/form&gt;</span></span>
<span class="line"><span style="color:#22863A;">  &lt;p&gt;</span></span>
<span class="line"><span style="color:#22863A;">    {</span></span>
<span class="line"><span style="color:#22863A;">      {</span></span>
<span class="line"><span style="color:#22863A;">        &quot;src&quot;:&quot;/api/register&quot;,</span></span>
<span class="line"><span style="color:#22863A;">        &quot;after&quot;:&quot;submit:#form&quot;,</span></span>
<span class="line"><span style="color:#22863A;">        &quot;repeat&quot;:false,</span></span>
<span class="line"><span style="color:#22863A;">        &quot;indicators&quot;: [</span></span>
<span class="line"><span style="color:#22863A;">          {</span></span>
<span class="line"><span style="color:#22863A;">            &quot;trigger&quot;: &quot;pending&quot;,</span></span>
<span class="line"><span style="color:#22863A;">            &quot;content&quot;: &quot;&lt;p&gt;Loading...&lt;/p&gt;&quot;</span></span>
<span class="line"><span style="color:#22863A;">          }</span></span>
<span class="line"><span style="color:#22863A;">        ]</span></span>
<span class="line"><span style="color:#22863A;">      }</span></span>
<span class="line"><span style="color:#22863A;">    }</span></span>
<span class="line"><span style="color:#22863A;">  &lt;/p&gt;</span></span>
<span class="line"><span style="color:#22863A;">&lt;/div&gt;\`</span></span>
<span class="line"><span style="color:#24292EFF;">);</span></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#6F42C1;"> initFn</span><span style="color:#D32F2F;"> =</span><span style="color:#24292EFF;"> (ctx) </span><span style="color:#D32F2F;">=&gt;</span><span style="color:#24292EFF;"> {</span></span>
<span class="line"><span style="color:#D32F2F;">  const</span><span style="color:#1976D2;"> event</span><span style="color:#D32F2F;"> =</span><span style="color:#1976D2;"> ctx</span><span style="color:#24292EFF;">.</span><span style="color:#1976D2;">request</span><span style="color:#24292EFF;">.event;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">  return</span><span style="color:#24292EFF;"> {</span></span>
<span class="line"><span style="color:#24292EFF;">    body</span><span style="color:#D32F2F;">:</span><span style="color:#D32F2F;"> new</span><span style="color:#6F42C1;"> FormData</span><span style="color:#24292EFF;">(</span><span style="color:#1976D2;">event</span><span style="color:#24292EFF;">.target</span><span style="color:#212121;">,</span><span style="color:#1976D2;"> event</span><span style="color:#24292EFF;">.submitter)</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">    credentials</span><span style="color:#D32F2F;">:</span><span style="color:#22863A;"> &quot;same-origin&quot;</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">  };</span></span>
<span class="line"><span style="color:#24292EFF;">};</span></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> obj</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> templateFn</span><span style="color:#24292EFF;">(initFn);</span></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> wrapper</span><span style="color:#D32F2F;"> =</span><span style="color:#1976D2;"> document</span><span style="color:#6F42C1;">.getElementById</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;wrapper&quot;</span><span style="color:#24292EFF;">);</span></span>
<span class="line"><span style="color:#1976D2;">wrapper</span><span style="color:#6F42C1;">.appendChild</span><span style="color:#24292EFF;">(</span><span style="color:#1976D2;">obj</span><span style="color:#24292EFF;">.response);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="result" tabindex="-1"><a class="header-anchor" href="#result"><span>Result</span></a></h3>`,3)),n("div",D,[n("div",null,[n("div",null,[n("form",{onSubmit:b(e.switchComponent,["prevent"]),id:"form"},[n("div",w,[s[1]||(s[1]=n("label",{for:"login"},"User name: ",-1)),g(n("input",{"onUpdate:modelValue":s[0]||(s[0]=t=>e.login=t),type:"login",name:"login",id:"login",required:""},null,512),[[f,e.login]])]),s[2]||(s[2]=n("div",{class:"form-example"},[n("input",{type:"submit",value:"Register!"})],-1))],32),n("p",null,[(m(),q(k(e.currentComponent)))])])])]),s[4]||(s[4]=v(`<h2 id="why-hmpl" tabindex="-1"><a class="header-anchor" href="#why-hmpl"><span>Why hmpl?</span></a></h2><p>The HMPL template language extends the capabilities of regular HTML by adding query objects to the markup to reduce the code on the client. When creating modern web applications, frameworks and libraries are used, which entail the need to write a bunch of boilerplate code, as well as connecting additional modules, which again make JavaScript files very large. If you recall the same SPA, then there js files can reach several hundred megabytes, which makes the first site load speed quite long. All this can be avoided by generating the markup on the server and then loading it on the client. Example of comparing the file size of a web application on Vue and HMPL.js:</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#6F42C1;">createApp</span><span style="color:#24292EFF;">({</span></span>
<span class="line"><span style="color:#6F42C1;">  setup</span><span style="color:#24292EFF;">() {</span></span>
<span class="line"><span style="color:#D32F2F;">    const</span><span style="color:#1976D2;"> count</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> ref</span><span style="color:#24292EFF;">(</span><span style="color:#1976D2;">0</span><span style="color:#24292EFF;">);</span></span>
<span class="line"><span style="color:#D32F2F;">    return</span><span style="color:#24292EFF;"> {</span></span>
<span class="line"><span style="color:#24292EFF;">      count</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">    };</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">  template</span><span style="color:#D32F2F;">:</span><span style="color:#22863A;"> \`&lt;div&gt;</span></span>
<span class="line"><span style="color:#22863A;">        &lt;button @click=&quot;count++&quot;&gt;Click!&lt;/button&gt;</span></span>
<span class="line"><span style="color:#22863A;">        &lt;div&gt;Clicks: {{ count }}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;/div&gt;\`</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">})</span><span style="color:#6F42C1;">.mount</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;#app&quot;</span><span style="color:#24292EFF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Size: <strong>226</strong> bytes (4KB on disk)</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#1976D2;">document</span><span style="color:#6F42C1;">.querySelector</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;#app&quot;</span><span style="color:#24292EFF;">)</span><span style="color:#6F42C1;">.append</span><span style="color:#24292EFF;">(</span></span>
<span class="line"><span style="color:#1976D2;">  hmpl</span><span style="color:#6F42C1;">.compile</span><span style="color:#24292EFF;">(</span></span>
<span class="line"><span style="color:#22863A;">    \`&lt;div&gt;</span></span>
<span class="line"><span style="color:#22863A;">        &lt;button&gt;Click!&lt;/button&gt;</span></span>
<span class="line"><span style="color:#22863A;">        &lt;div&gt;Clicks: {{ &quot;src&quot;: &quot;/api/clicks&quot;, &quot;after&quot;: &quot;click:button&quot; }}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;/div&gt;\`</span></span>
<span class="line"><span style="color:#24292EFF;">  )().response</span></span>
<span class="line"><span style="color:#24292EFF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Size: <strong>206</strong> bytes (4KB on disk)</p></blockquote><p>If we do not take into account that in one case we store the state on the client, and in the other on the server, as well as the response speed from the server, then we can see that with different file sizes we get the same interface. And this is only a small example. If we take large web applications, then the file sizes there can be several times smaller.</p><h2 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack"><span>Webpack</span></a></h2><p>Module has its own loader for files with the <code>.hmpl</code> extension. You can include <a href="https://www.npmjs.com/package/hmpl-loader" target="_blank" rel="noopener noreferrer">hmpl-loader</a> and use the template language syntax in separate files:</p><h3 id="main-hmpl" tabindex="-1"><a class="header-anchor" href="#main-hmpl"><span>main.hmpl</span></a></h3><div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292EFF;">&gt;</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">    {</span></span>
<span class="line"><span style="color:#24292EFF;">      &quot;src&quot;:&quot;/api/test&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">    }</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292EFF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="main-js" tabindex="-1"><a class="header-anchor" href="#main-js"><span>main.js</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> templateFn</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> require</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;./main.hmpl&quot;</span><span style="color:#24292EFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> elementObj</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> templateFn</span><span style="color:#24292EFF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For the loader to work, it is better to use versions <code>0.0.2</code> or higher.</p>`,14))])}const S=E(A,[["render",x],["__file","index.html.vue"]]),M=JSON.parse('{"path":"/","title":"Home","lang":"en-US","frontmatter":{"home":true,"title":"Home","actions":[{"text":"Get Started","link":"/getting-started.html","type":"primary"},{"text":"Demo Sandbox","link":"https://codesandbox.io/p/sandbox/basic-hmpl-example-dxlgfg","type":"secondary"}],"features":[{"title":"Fully customizable","icon":"wrench","details":"When working with server-side HTML, unlike HTMX and similar modules, you can almost completely customize requests to the server"},{"title":"Syntax","icon":"code","details":"Work with server-side html directly in markup, passing only the object"},{"title":"Supportability","icon":"clock","details":"The basis of the language is fetch and the new ECMAScript and Web APIs features that come with it"}],"footer":"Licensed under MIT"},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[{"level":3,"title":"Result","slug":"result","link":"#result","children":[]}]},{"level":2,"title":"Why hmpl?","slug":"why-hmpl","link":"#why-hmpl","children":[]},{"level":2,"title":"Webpack","slug":"webpack","link":"#webpack","children":[{"level":3,"title":"main.hmpl","slug":"main-hmpl","link":"#main-hmpl","children":[]},{"level":3,"title":"main.js","slug":"main-js","link":"#main-js","children":[]}]}],"git":{},"readingTime":{"minutes":2.01,"words":603},"filePathRelative":"README.md"}');export{S as comp,M as data};
